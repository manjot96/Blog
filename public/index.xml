<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brute Coding</title>
    <link>https://www.brutecoding.com/</link>
    <description>Recent content on Brute Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Mon, 05 Feb 2018 19:31:15 -0800</lastBuildDate>
    
	<atom:link href="https://www.brutecoding.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Load Server Side Data before Bootstrapping your Angular 5 application</title>
      <link>https://www.brutecoding.com/posts/load-server-data-before-init-app/</link>
      <pubDate>Mon, 05 Feb 2018 19:31:15 -0800</pubDate>
      
      <guid>https://www.brutecoding.com/posts/load-server-data-before-init-app/</guid>
      <description>Ever wanted to load server-side data before loading your application? Or ever wanted to make a HTTP request before having your application bootstrapped. You can do this by injecting HttpClient into main.ts by using the StaticInjector that was introduced in Angular 5. This is what your main.ts file should look like:
function interceptingHandler(backend, interceptors = []) { if (!interceptors) { return backend; } return interceptors.reduceRight((next, interceptor) =&amp;gt; new HttpInterceptorHandler(next, interceptor), backend); } class MyBrowserXHR implements XhrFactory { public build() { return new XMLHttpRequest(); } } class HttpInterceptorHandler { private next; private interceptor; constructor(next, interceptor) { this.</description>
    </item>
    
    <item>
      <title>Setting Up Environment for Angular Development</title>
      <link>https://www.brutecoding.com/posts/setting-up-environment-for-angular-development/</link>
      <pubDate>Sat, 03 Feb 2018 22:27:54 -0800</pubDate>
      
      <guid>https://www.brutecoding.com/posts/setting-up-environment-for-angular-development/</guid>
      <description>Tools you&amp;rsquo;ll be requiring during this process  node.js angular-cli Any text editor (here are some I would recommend):  Visual Studio Code Atom Sublime 3 Notepad++   Installing node.js  I&amp;rsquo;d recommend downloading the LTS build (current build is for devs and might have some bugs in it therefore it might be unstable)   Do not change these options unless you know what you are doing It might impact you to not be able to access node from the cmd if you make some changes here  Installing angular-cli  Start off with closing all your cmd &amp;amp; powershell windows Ensure you have node installed:  Open cmd (by searching from the start menu or by pressing windows + r and typing in cmd) Type node -v followed by npm -v; If you recieve an error on any of the following commands go through the previous step  Install angular-cli by running npm i -g @angular/cli (-g flag enabled the flag for global) Now you&amp;rsquo;re good to go and start creating angular applications  Creating your first Angular application  Open a shell at a location where you want the new application to be installed e.</description>
    </item>
    
    <item>
      <title>Documentation</title>
      <link>https://www.brutecoding.com/doc/</link>
      <pubDate>Wed, 21 Dec 2016 01:25:44 -0800</pubDate>
      
      <guid>https://www.brutecoding.com/doc/</guid>
      <description>Simple Documentation for getting started with Hugo Understanding how it works  Main file is config.toml  Don&amp;rsquo;t really need to understand the syntax Main stuff is the baseurl, title, and theme you&amp;rsquo;ll be using to setup new theme just clone the git repo for that theme into themes folder and change theme = &amp;lsquo;folderNameOfTheme&amp;rsquo; in config.toml Most commands are different theme to theme Every theme has an example site if you want to get started with that  Creating a new post  All posts are put underneath content-&amp;gt;posts To create a post you can do hugo new post my-new-post It automatically shows up on the blog  Testing your blog  hugo serve -w deploys it locally to localhost:1313  Deploying to server  type hugo in the root dir and it&amp;rsquo;ll generate a public folder that just contains the html files for your entire website  MD syntax on blog posts  https://github.</description>
    </item>
    
  </channel>
</rss>